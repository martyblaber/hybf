{
    "project_name": "hybf",
    "description": "Hybrid Binary Format - An efficient binary storage format for tabular data with automatic compression selection",
    "version": "1.0.0",
    
    "project_structure": {
        "layout": "src-layout",
        "directories": {
            "src/hybf": "Main package code",
            "tests": "Test suite",
            "docs": "Documentation",
            "examples": "Usage examples"
        }
    },

    "core_architecture": {
        "type_system": {
            "base_types": {
                "LogicalType": {
                    "description": "User-facing data types that match pandas/numpy types",
                    "types": [
                        "INT8", "INT16", "INT32", "INT64",
                        "UINT8", "UINT16", "UINT32", "UINT64",
                        "FLOAT32", "FLOAT64",
                        "BOOL", "STRING", "DATETIME", "TIMEDELTA"
                    ]
                },
                "StorageType": {
                    "description": "Internal storage types with bit-width optimization",
                    "types": [
                        "INT8", "INT16", "INT32", "INT64",
                        "UINT8", "UINT16", "UINT32", "UINT64",
                        "FLOAT32", "FLOAT64",
                        "BOOL", "STRING", "DATETIME64", "TIMEDELTA64",
                        "DICTIONARY", "RLE", "CONSTANT"
                    ]
                }
            },
            "type_conversion": {
                "automatic_downcasting": true,
                "null_handling": "bitmap",
                "string_encoding": "utf-8"
            }
        },

        "column_abstraction": {
            "base_classes": {
                "Column": {
                    "description": "Abstract base class for all column implementations",
                    "properties": {
                        "name": "string",
                        "logical_type": "LogicalType",
                        "storage_type": "StorageType",
                        "nullable": "boolean",
                        "metadata": "dict"
                    },
                    "methods": {
                        "write": "Write column data to binary format",
                        "read": "Read column data from binary format",
                        "get_memory_usage": "Calculate memory usage",
                        "validate": "Validate column data"
                    }
                }
            },
            "implementations": [
                "NumericColumn",
                "StringColumn",
                "DateTimeColumn",
                "DictionaryEncodedColumn",
                "RLEColumn",
                "ConstantColumn",
                "NullColumn"
            ]
        },

        "compression_system": {
            "strategies": {
                "dictionary_encoding": {
                    "threshold": "cardinality_ratio <= 0.1",
                    "target_types": ["STRING", "LOW_CARDINALITY_NUMERIC"]
                },
                "rle": {
                    "threshold": "run_ratio <= 0.1",
                    "target_types": ["ALL"]
                },
                "constant_value": {
                    "threshold": "unique_values == 1",
                    "target_types": ["ALL"]
                },
                "delta_encoding": {
                    "threshold": "delta_ratio <= 0.1",
                    "target_types": ["NUMERIC", "DATETIME"]
                },
                "bit_packing": {
                    "threshold": "always",
                    "target_types": ["NUMERIC"]
                }
            },
            "selection_process": {
                "analysis_phase": [
                    "Analyze data statistics",
                    "Calculate compression ratios",
                    "Determine optimal strategy"
                ],
                "fallback": "RAW with bit-width optimization"
            }
        },

        "file_io": {
            "implementations": {
                "BinaryReader":{
                    "file":"np.fromfile",
                    "buffer":"np.frombuffer"
                    }
                }
            }
        }

        "file_format": {
            "header": {
                "magic_number": "HYBF",
                "version": "uint8",
                "column_count": "uint16"
            },
            "metadata_section": {
                "schema_version": "uint32",
                "row_count": "uint32",
                "created_at": "uint64",
                "user_metadata": "variable"
            },
            "column_definitions": {
                "per_column": {
                    "name_length": "uint8",
                    "name": "utf8_string",
                    "logical_type": "uint8",
                    "storage_type": "uint8",
                    "compression_type": "uint8",
                    "nullable": "bool",
                    "metadata_length": "uint16",
                    "metadata": "variable"
                }
            },
            "data_section": {
                "alignment": 8,
                "column_data": {
                    "size": "uint32",
                    "data": "variable"
                }
            }
        }
    },

    "testing_strategy": {
        "framework": "pytest",
        "test_types": {
            "unit_tests": {
                "coverage_target": "95%",
                "areas": [
                    "Type system",
                    "Column implementations",
                    "Compression strategies",
                    "File format handling"
                ]
            },
            "property_tests": {
                "framework": "hypothesis",
                "areas": [
                    "Data roundtrip integrity",
                    "Type conversion correctness",
                    "Compression effectiveness"
                ]
            },
            "performance_tests": {
                "metrics": [
                    "Compression ratio",
                    "Write speed",
                    "Read speed",
                    "Memory usage"
                ],
                "benchmarks": [
                    "Small datasets (<1MB)",
                    "Medium datasets (1-100MB)",
                    "Large datasets (>100MB)"
                ]
            }
        }
    },

    "optimization_targets": {
        "memory": {
            "column_chunking": true,
            "lazy_loading": true,
            "memory_mapping": true
        },
        "performance": {
            "parallel_compression": true,
            "vectorized_operations": true,
            "cache_friendly_layout": true
        }
    },

    "dependencies": {
        "required": {
            "python": ">=3.8",
            "numpy": ">=1.20",
            "pandas": ">=1.3"
        },
        "optional": {
            "pyarrow": "For Arrow integration",
            "fastparquet": "For Parquet comparison benchmarks"
        },
        "development": {
            "pytest": "Testing framework",
            "hypothesis": "Property-based testing",
            "black": "Code formatting",
            "mypy": "Type checking",
            "pylint": "Code linting"
        }
    },

    "packaging": {
        "build_system": "poetry",
        "package_format": ["wheel", "sdist"],
        "documentation": {
            "format": "sphinx",
            "outputs": ["html"]
        }
    }
}